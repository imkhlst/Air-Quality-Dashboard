# -*- coding: utf-8 -*-
"""Dashboard.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ezCCaCafiSdHFSW2us9AInQzSZekqSsB

# Install & Import Package/Library yang digunakan
"""

import os
import pandas as pd
import numpy as np
import streamlit as st
import plotly
import plotly.express as px

air_df = pd.read_csv('air_data.csv')
air_df.info()

month_names = ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember']

def number_to_month_name(month_number):
    return month_names[month_number - 1]

def month_name_to_number(month_name):
    return month_names.index(month_name) + 1

def get_year(df):
    years = df['year'].unique()
    return years

def get_month(df, year):
    years_df = df[df['year'] == year]
    months = sorted(years_df['month'].unique())
    months = [number_to_month_name(month) for month in months]
    return months

def get_station(df):
    station = df['station'].unique()
    return station

def get_pollutan():
    return ["PM2.5", "PM10", "SO2", "NO2", "CO", "O3"]

# Data rata-rata polusi kendaraan
def avg_vehicle_pol(df, year, station):
  return round(df.loc[(df['year'] == year) & (df['station'] == station),
                      'Vehicles'].mean(), 2)
# Data rata-rata polusi industri
def avg_industry_pol(df, year, station):
  return round(df.loc[(df['year'] == year) & (df['station'] == station),
                      'Industrials'].mean(), 2)

# Data rata-rata polutan
def avg_pollution_by_year(df, year, station):
  return round(df.loc[(df['year'] == year) & (df['station'] == station),
                      ['PM2.5', 'PM10', 'CO', 'NO2', 'SO2', 'O3']
                      ].mean().sort_values(ascending=False), 2)

# Data rata-rata temperatur dan kecepatan angin
def avg_temp_wind(df, year, station):
  return df.loc[(df['year'] == year) & (df['station'] == station),
                ['TEMP', 'WSPM']].mean().round(2)

# Data rata-rata polusi kendaraan per tahun
def avg_vehicle_pol_by_year(df, year, station):
    new_df = df[(df['year'] == year) & (df['station'] == station)]
    average_vehicle = new_df.groupby(by=['month']).agg({
        'Vehicles': 'mean'
    })
    average_vehicle.index = [number_to_month_name(month) for month in average_vehicle.index]
    average_vehicle.reset_index(drop=True)
    return round(average_vehicle, 2)

# Data rata-rata polusi industri per tahun
def avg_industry_pol_by_year(df, year, station):
    new_df = df[(df['year'] == year) & (df['station'] == station)]
    average_pollution = new_df.groupby(by='month').agg({
        'Industrials': 'mean'
    })
    average_pollution.index = [number_to_month_name(month) for month in average_pollution.index]
    return round(average_pollution, 2)

# Data polutan per tahun
def yearly_pollution(df, station, year):
    pollutan = (
        df.loc[(df['station'] == station) & (df['year'] == year)]
          .groupby('month')[['PM2.5', 'PM10', 'SO2', 'NO2', 'CO', 'O3']]
          .mean()
          .rename(index=number_to_month_name))
    return round(pollutan, 2)

# Data temperatur dan kecepatan angin per tahun
def yearly_temp_wind(df, station, year):
    temp_wind = (
        df.loc[(df['station'] == station) & (df['year'] == year)]
          .groupby('month')[['TEMP', 'WSPM']]
          .mean()
          .rename(index=number_to_month_name))
    return round(temp_wind, 2)

# Data polutan per bulan
def monthly_pollution(df, station, year, month):
    pollutan = (
        df.loc[(df['station'] == station) & (df['year'] == year) & (df['month'] == month)]
          .groupby('day')[['PM2.5', 'PM10', 'SO2', 'NO2', 'CO', 'O3']]
          .mean()
          .rename(index=number_to_month_name))
    return round(pollutan, 2)

# Data temperatur dan kecepatan angin per bulan
def monthly_temp_wind(df, station, year, month):
    temp_wind = (
        df.loc[(df['station'] == station) & (df['year'] == year) & (df['month'] == month)]
          .groupby('day')[['TEMP', 'WSPM']]
          .mean()
          .rename(index=number_to_month_name))
    return round(temp_wind, 2)

st.header('Air Quality Dashboard :sparkles:')

st.subheader('General Information')

col1, col2 = st.columns(2)

with col1:
    stations = get_station(air_df)
    station = st.selectbox('Station', stations, label_visibility='collapsed')

with col2:
    years = get_year(air_df)
    year = st.selectbox('Year', years, label_visibility='collapsed')

row1, row2, row3, row4 = st.columns(4)

with row1:
    st.metric('Average Vehicle Pollution', avg_vehicle_pol(air_df, year, station))

with row2:
    st.metric('Average Industry Pollution', avg_industry_pol(air_df, year, station))

with row3:
    st.metric('Average Temperature', f'{avg_temp_wind(air_df, year, station)["TEMP"]} Â°C')

with row4:
    st.metric('Average Wind Speed', f'{avg_temp_wind(air_df, year, station)["WSPM"]} m/s')

with st.container():
    st.write("#")
    pollutan = yearly_pollution(air_df, station, year)
    pollutan_long = pollutan.reset_index().melt(id_vars="month", var_name="Pollutant", value_name="Average Pollution")
    fig = px.bar(
        pollutan_long,
        x="month",
        y="Average Pollution",
        color="Pollutant",
        title="Yearly Pollution",
        labels={"month": "Month", "Average Pollution": "Average Pollution"}
    )
    fig.update_traces(showlegend=False)
    st.write(fig)

# rata-rata polusi kendaraan
with st.container():
    st.write("#")
    vehicle_pollutan = avg_vehicle_pol_by_year(air_df, year, station)
    fig = px.line(vehicle_pollutan, title="Average Vehicle Pollution by Month", labels={"index":"Month", "value":"Average Pollution"})
    fig.update_traces(showlegend=False, mode="lines+markers")
    st.write(fig)

# rata-rata polusi industri
with st.container():
    st.write("#")
    industry_pollutan = avg_industry_pol_by_year(air_df, year, station)
    fig = px.line(industry_pollutan, title="Average Industrial Pollution by Month", labels={'index': 'Month', 'value':'Average Pollution'})
    fig.update_traces(showlegend=False, mode="lines+markers")
    st.write(fig)